6c6,39
< version = "0.9.6"
---
> """
> # Copyright 2012 iXsystems, Inc.
> # All rights reserved
> #
> # Redistribution and use in source and binary forms, with or without
> # modification, are permitted providing that the following conditions
> # are met:
> # 1. Redistributions of source code must retain the above copyright
> # notice, this list of conditions and the following disclaimer.
> # 2. Redistributions in binary form must reproduce the above copyright
> # notice, this list of conditions and the following disclaimer in the
> # documentation and/or other materials provided with the distribution.
> #
> # THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
> # IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
> # WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
> # ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
> # DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
> # DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
> # OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
> # HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
> # STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
> # IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
> # POSSIBILITY OF SUCH DAMAGE.
> #
> """
> 
> 
> """
> This source code(0.9.7) was changed by Shuto Imai.
> Released under the GPL 2.0 by Shuto Imai 
> """
> 
> version = "0.9.7"
1053c1086
< 	def proc_keepalive(self, sid, w, h):
---
> 	def proc_keepalive(self, sid, jid, w, h):
1056a1090
> 				'jid':jid,
1081a1116
> 		shell = self.cmd
1091a1127,1170
> 			"""
> 			try:
> 				ls = os.environ['LANG'].split('.')
> 			except KeyError:
> 				ls = []
> 			if len(ls) < 2:
> 				ls = ['en_US', 'UTF-8']
> 			try:
> 				env = {
> 					'COLUMNS': str(w),
> 					'LINES': str(h),
> 					'TERM': self.env_term,
> 					'PATH': (
> 						'/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:'
> 						'/usr/local/sbin'),
> 					'LANG': ls[0] + '.UTF-8',
> 					'HOME': '/root',
> 					'SHELL': shell,
> 				}
> 
> 				libc = cdll.LoadLibrary('libc.so.7')
> 				buff = create_string_buffer(len(self.cmd) + 1)
> 				buff.value = self.cmd
> 				libc.setproctitle(byref(buff))
> 				if self.session[sid]['jid']:
> 					
> 					os.execve(
> 						"/usr/sbin/jexec",
> 						(
> 							shell.split("/")[-1:] +
> 							[self.session[sid]['jid'], shell]
> 						),
> 						env
> 					)
> 					
> 					cmd = 
> 				else:
> 					os.execve(shell, shell.split("/")[-1:], env)
> 			except Exception, e:
> 				pass
> 			#	log.error("Impossible to start a subshell (%r): %s", e, e)
> 			#self.proc_finish(sid)
> 			os._exit(0)
> 			"""
1094a1174
> 				"""
1096a1177
> 				
1104a1186,1196
> 				"""
> 				
> 				if self.session[sid]['jid']:
> 				#	cmd = '/usr/sbin/jexec'
> 				#	cmd += str(self.session[sid]['jid'])
> 				#	cmd += '/bin/tcsh'
> 					cmd = '/usr/sbin/jexec ' + str(self.session[sid]['jid']) + ' /bin/tcsh'
> 				else:
> 					cmd = '/bin/tcsh'
> 				#	os.execve(shell, shell.split("/")[-1:], env)
> 
1117a1210
> 				os.putenv('HOME', "/root")
1122a1216
> 			
1258a1353
> 				jid = int(p['jid'][0])
1263c1358
< 				if multiplex.proc_keepalive(sid, w, h):
---
> 				if multiplex.proc_keepalive(sid, jid, w, h):
1268c1363,1364
< 					content_data = '<?xml version="1.0" encoding="UTF-8"?>' + multiplex.proc_dump(sid)
---
> 				#	content_data = '<?xml version="1.0" encoding="UTF-8"?>' + multiplex.proc_dump(sid)
> 					content_data = multiplex.proc_dump(sid)
1299a1396
> 			self.send_header('Access-Control-Allow-Origin','*')
